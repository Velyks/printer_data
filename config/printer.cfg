# This file contains common pin mappings for the BigTreeTech Octopus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Thermistor types                     [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section

[mcu]
canbus_uuid: ccd02b4874f0
#serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_050025000A50534E4E313020-if00
#restart_method: command
#peepeepoopoo

[mcu rpi]
serial: /tmp/klipper_host_mcu

[mcu sb2040]
canbus_uuid: 3b17cf19cac8

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 10000             #Max 4000
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: sb2040:gpio29
position_min: 0

position_endstop: 250
position_max: 250

homing_speed: 100   #Max 100
second_homing_speed: 25
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  A Stepper - Right
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_min: 0

position_endstop: 250
position_max: 250

homing_speed: 100  #Max 100
second_homing_speed: 25
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PD11
diag_pin: ^PG9
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
driver_SGTHRS: 112
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to MOTOR_2
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
endstop_pin: probe:z_virtual_endstop
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
# position_endstop: +2.0

position_max: 230

position_min: -5
homing_speed: 15
second_homing_speed: 5
homing_retract_dist: 2

[tmc2209 stepper_z]
uart_pin: PC6
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z1 Stepper - Rear Left
##  Connected to MOTOR_3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z2 Stepper - Rear Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z3 Stepper - Front Right
##  Connected to MOTOR_5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
#   Extruder
#####################################################################

##  Connected to MOTOR_6
##  Heater - HE0
##  Thermistor - T0
[extruder]
step_pin: sb2040:gpio9
dir_pin: !sb2040:gpio10
enable_pin: !sb2040:gpio7
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
rotation_distance: 22.7363868209   #Bondtech 5mm Drive Gears
#rotation_distance: 20.4911686223
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1
gear_ratio: 50:10               #BMG Gear Ratio
microsteps: 32
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: sb2040:gpio6
##  Validate the following thermistor type to make sure it is correct
##  See https://www.klipper3d.org/Config_Reference.html#common-thermistors for additional options
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: sb2040:gpio27
min_temp: 10
max_temp: 270
max_power: 1
min_extrude_temp: 170
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
##  Try to keep pressure_advance below 1.0
pressure_advance: 0.03
##  Default is 0.040, leave stock
pressure_advance_smooth_time: 0.040
## For flow testing
max_extrude_cross_section: 5
max_extrude_only_distance: 250

##  E0 on MOTOR6
[tmc2209 extruder]
uart_pin: sb2040:gpio8
interpolate: false
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
##  SSR Pin - HE1
##  Thermistor - TB
heater_pin: PA3
##  Validate the following thermistor type to make sure it is correct
##  See https://www.klipper3d.org/Config_Reference.html#common-thermistors for additional options
sensor_type: Generic 3950
sensor_pin: PF3
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 1.0
min_temp: 0
max_temp: 110
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
#   Probe
#####################################################################

[probe]
##  Inductive Probe
##  This probe is not used for Z height, only Quad Gantry Leveling

## Select the probe port by type:
## For the PROBE port. Will not work with Diode. May need pull-up resistor from signal to 24V.
#pin: ~!PB7
## For the DIAG_7 port. NEEDS BAT85 DIODE! Change to !PG15 if probe is NO.
pin: sb2040:gpio28
## For Octopus Pro PROBE port; NPN and PNP proximity switch types can be set by jumper
#pin: ~!PC5

#--------------------------------------------------------------------

x_offset: 0
y_offset: 0
z_offset: -1.50
#z_offset: -1
#z_offset: 0
speed: 10.0
samples: 3
samples_result: median
sample_retract_dist: 2
samples_tolerance: 0.08
samples_tolerance_retries: 5
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}

#####################################################################
#   Fan Control
#####################################################################

[fan]
##  Print Cooling Fan - FAN0
pin: sb2040:gpio13
kick_start_time: 0.5
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
off_below: 0.10
cycle_time: 0.01

[heater_fan hotend_fan]
##  Hotend Fan - FAN1
pin: sb2040:gpio14
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##  If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[multi_pin skirt_fans]
pins: PD12,PD13

[controller_fan skirt]
pin: multi_pin:skirt_fans
max_power: 0.3
kick_start_time: 0.5
stepper: stepper_x

#[heater_fan exhaust_fan]
##  Exhaust fan - FAN3
#pin: PD13
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 60
#fan_speed: 1.0
[multi_pin chamber_fans]
pins: PD14,PD15

[fan_generic chamber]
pin: multi_pin:chamber_fans
kick_start_time: 0.5

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 43200

[safe_z_home]
##  XY Location of the Z Endstop Switch
##  Update -10,-10 to the XY coordinates of your endstop pin 
##  (such as 157,305) after going through Z Endstop Pin
##  Location Definition step.
home_xy_position:125,125
#speed:250
z_hop:5

[quad_gantry_level]
##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions
##  Gantry Corners for 250mm Build
gantry_corners:
   -60,-10
   310, 320
#  Probe points
points:
   25,25
   25,200
   225,200
   225,25

speed: 250
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.01
max_adjust: 10

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
#   Displays / LEDs
#####################################################################

[display]
#  mini12864 LCD Display
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2

[neopixel btt_mini12864]
##  To control Neopixel RGB in mini12864 display
pin: EXP1_6
chain_count: 3
initial_RED: 0.1
initial_GREEN: 0.5
initial_BLUE: 0.0
color_order: RGB

##  Set RGB values on boot up for each Neopixel. 
##  Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=2 TRANSMIT=0
        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=3 

#--------------------------------------------------------------------

[neopixel stealthburner]
pin: sb2040:gpio12
chain_count: 3
color_order: GRBW
initial_RED: 0
initial_GREEN: 0
initial_BLUE: 0
initial_WHITE: 0.2

#####################################################################
#   Bed Mesh
#####################################################################

[bed_mesh]
speed: 250
horizontal_move_z: 10
mesh_min: 25,25
mesh_max: 225,225
probe_count: 5,5
#relative_reference_index: 12
zero_reference_position: 125, 125

#####################################################################
#   Input Shaping
#####################################################################

[input_shaper]
#shaper_freq_x: 62.2
#shaper_type_x: mzv
#shaper_freq_y: 44.2
#shaper_type_y: mzv
shaper_freq_x: 60.8
shaper_type_x: mzv
shaper_freq_y: 45.6
shaper_type_y: mzv

#####################################################################
#  Other hardware
#####################################################################

# Chamber Thermistor
[thermistor ntc10k3435]
temperature1: 25.0
resistance1: 10000.0
beta: 3435

[temperature_sensor chamber_bottom]
sensor_pin: PF5
sensor_type: ntc10k3435

[temperature_sensor sb2040]
sensor_type: temperature_mcu
sensor_mcu: sb2040

[temperature_sensor toolhead]
sensor_type = ATC Semitec 104GT-2
sensor_pin = sb2040:gpio26
min_temp: -50
max_temp: 350

# LED Lighting
[output_pin leds]
pin: PB10
pwm: true
cycle_time: 0.01
value: 0.5

# Filament Sensor
[include runout_detection.cfg]

# Klicky
#[include klicky_variables.cfg]
#[include klicky_macros.cfg]
#[include klicky_quad_level_gantry.cfg]
#[include klicky_bed_mesh_calibrate.cfg]

# Nozzle scrubber
#[include nozzle_scrub.cfg]

# ADXL345
[adxl345]
cs_pin: sb2040:gpio1
spi_software_sclk_pin: sb2040:gpio0
spi_software_mosi_pin: sb2040:gpio3
spi_software_miso_pin: sb2040:gpio2

[resonance_tester]
accel_chip: adxl345
probe_points: 125,125,25
max_freq: 120

# Enable object exclusion
[exclude_object]

# Enable arcs support
[gcode_arcs]
resolution: 0.1

# Servo dock/brush
[servo dock_brush_servo]
pin: PB6
initial_angle: 0
minimum_pulse_width: 0.0005
maximum_pulse_width: 0.0025

[auto_tap]
tap_version: VITALII_CNC


#####################################################################
#   Macros
#####################################################################

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    G28
    QUAD_GANTRY_LEVEL
    G28
    G0 X125 Y125 Z30 F3600

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    BED_MESH_CLEAR
    ENABLE_BED                       ; turn bed heater on
    M190 S{ params.T_BED }          ; Set and wait for bed temp
    M109 S150                       ; Set probing temp
    G28                              ; home all axes
    CLEAN_NOZZLE
    G28 Z
    G1 Z5                            ; Move Z off the bed
    QUAD_GANTRY_LEVEL                ; level
    G28 Z
    G1 Z5
    #clean_nozzle PURGE_LEN=0 WIPE_QTY=3 PURGE_RET=3  ; Scrub the nozzle
    M109 S{ params.T_TOOL }         ; Set and wait extruder temp
    PURGE_LINE
    BED_MESH_PROFILE LOAD={ params.PROFILE|default("default") }
   

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-20.0 F2500                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x} Y{th.axis_maximum.y - 10} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

[gcode_macro CANCEL_PRINT]
rename_existing: CANCEL_PRINT_BASE
gcode:
    PRINT_END

[gcode_macro ENABLE_BED]
gcode:
    {action_call_remote_method("set_device_power", device="bed", state="on")}

[gcode_macro DISABLE_BED]
gcode:
    {action_call_remote_method("set_device_power", device="bed", state="off")}

[gcode_macro PURGE_LINE]
gcode:
    SAVE_GCODE_STATE NAME=PRIME_NOZZLE_STATE 
    
    M117 Priming 
    G90 ; Absolute coordinates. 
    M83 ; Relative extruder mode. 
    G92 E0 ; Move to start of line. 
    G1 Z10 F900 
    G1 Y3 X3 F18000 
    G1 Z0.2 F900 ; Print the line. 
    G91 ; Relative coordinates. 
    G1 X100 E15 F1000 ; Extrude filament 25mm (how much it retracted in PRINT_END). 
    G1 Y-2 F1000 
    G1 X-60 E9 F1000 ; Print second part of the line. 
    G1 E-0.5 F3000 ; Retract to avoid stringing. 
    G1 X0.5 E0 F1000 ; Wipe back to break string. 
    G1 X-5.5 E0 F1000 ; Wipe forward to break string.
    G1 E0.4 F3000 ; Unretract so we dont miss the first line of the print
    
    RESTORE_GCODE_STATE NAME=PRIME_NOZZLE_STATE

[gcode_macro _HOME_Y]
gcode:
    _RetractDock  # Push the dock down if it's still up
    G28 Y0
    G91
    G1 Y-30 F1200  # Move Y back
    G4 P1000   # wait for stallguard to clear

[gcode_macro _DeployDock]
gcode:
    SET_SERVO SERVO=dock_brush_servo ANGLE=90
    G4 P1000

[gcode_macro _RetractDock]
gcode:
    SET_SERVO SERVO=dock_brush_servo ANGLE=0
    G4 P1000
    SET_SERVO SERVO=dock_brush_servo WIDTH=0

[gcode_macro CLEAN_NOZZLE]
gcode:
    SAVE_GCODE_STATE NAME=clean_nozzle
    _RetractDock
    G90
    G1 Z21.2 F4000
    G1 X80 Y242 F4000
    _DeployDock
    {% for i in range(0,3) %}
        G1 X80 Y242 F4000
        G1 X160 Y242 F4000
    {% endfor %}
    _RetractDock
    RESTORE_GCODE_STATE NAME=clean_nozzle

[include mainsail.cfg]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh cold]
#*# version = 1
#*# points =
#*# 	-0.001250, -0.005000, 0.047500, 0.045000, 0.031250
#*# 	0.018750, 0.016250, 0.038750, 0.028750, 0.007500
#*# 	-0.002500, 0.028750, 0.000000, 0.017500, 0.001250
#*# 	-0.007500, 0.002500, 0.008750, 0.005000, 0.016250
#*# 	0.010000, 0.022500, 0.015000, 0.022500, 0.022500
#*# tension = 0.2
#*# min_x = 25.0
#*# algo = lagrange
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 25.0
#*# x_count = 5
#*# max_y = 225.0
#*# mesh_x_pps = 2
#*# max_x = 225.0
#*#
#*# [bed_mesh hot]
#*# version = 1
#*# points =
#*# 	-0.065000, -0.006250, 0.030000, -0.002500, -0.041250
#*# 	-0.042500, 0.016250, 0.015000, 0.018750, -0.052500
#*# 	-0.020000, -0.018750, 0.000000, -0.005000, -0.031250
#*# 	-0.050000, 0.002500, -0.012500, -0.030000, -0.026250
#*# 	-0.016250, -0.007500, -0.000000, -0.021250, -0.035000
#*# tension = 0.2
#*# min_x = 25.0
#*# algo = lagrange
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 25.0
#*# x_count = 5
#*# max_y = 225.0
#*# mesh_x_pps = 2
#*# max_x = 225.0
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 37.006
#*# pid_ki = 2.597
#*# pid_kd = 131.833
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 44.975
#*# pid_ki = 2.221
#*# pid_kd = 227.688
#*#
#*# [bed_mesh abs]
#*# version = 1
#*# points =
#*# 	  0.003750, 0.012500, 0.046250, 0.040000, 0.005000
#*# 	  0.010000, 0.005000, 0.027500, 0.010000, -0.002500
#*# 	  0.002500, 0.005000, 0.000000, 0.005000, -0.005000
#*# 	  0.001250, 0.008750, 0.022500, 0.022500, 0.007500
#*# 	  0.015000, 0.023750, 0.042500, 0.037500, 0.026250
#*# tension = 0.2
#*# min_x = 25.0
#*# algo = lagrange
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 25.0
#*# x_count = 5
#*# max_y = 225.0
#*# mesh_x_pps = 2
#*# max_x = 225.0
#*#
#*# [bed_mesh pla]
#*# version = 1
#*# points =
#*# 	0.008750, 0.017500, 0.050000, 0.041250, 0.010000
#*# 	0.010000, 0.011250, 0.031250, 0.018750, -0.000000
#*# 	0.005000, 0.005000, 0.000000, 0.007500, -0.005000
#*# 	-0.002500, 0.007500, 0.018750, 0.022500, 0.002500
#*# 	0.008750, 0.015000, 0.025000, 0.023750, 0.018750
#*# tension = 0.2
#*# min_x = 25.0
#*# algo = lagrange
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 25.0
#*# x_count = 5
#*# max_y = 225.0
#*# mesh_x_pps = 2
#*# max_x = 225.0
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.028750, -0.042500, 0.006250, -0.005000, -0.027500
#*# 	-0.041250, -0.018750, -0.001250, -0.010000, -0.048750
#*# 	-0.045000, -0.017500, 0.000000, -0.037500, -0.052500
#*# 	-0.030000, -0.016250, -0.007500, -0.026250, -0.033750
#*# 	-0.025000, -0.026250, -0.013750, -0.017500, -0.016250
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 25.0
#*# max_x = 225.0
#*# min_y = 25.0
#*# max_y = 225.0
